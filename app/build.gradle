plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'koin'
}

android {

    compileSdkVersion rootProject.compileSdkVersion
    defaultConfig {
        applicationId = 'com.architecture'
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {

        release {

            def props = new Properties()
            def fileInputStream = new FileInputStream(file('keystore/sample.release.properties'))
            props.load(fileInputStream)
            fileInputStream.close()

            storeFile = file(props['storeFile'])
            storePassword = props['storePassword']
            keyAlias = props['keyAlias']
            keyPassword = props['keyPassword']

            v1SigningEnabled true
            v2SigningEnabled true
        }

        debug {
            storeFile file('keystore/sample.debug.keystore')
            keyAlias 'androiddebugkey'
            storePassword 'android'
            keyPassword 'android'

            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    buildTypes {
        release {
            resValue 'string', 'app_name', '"SampleArchitecture"'
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.release
        }

        debug {
            resValue 'string', 'app_name', '"SampleArchitecture-dev"'
            minifyEnabled false
            shrinkResources false
//            signingConfig signingConfigs.debug
        }
    }

    flavorDimensions "version"

    productFlavors {

        dev {
            dimension "version"
            applicationIdSuffix ".dev"
            buildConfigField("String", "BASE_URL", "\"http://www.mocky.io/v2/\"")
        }

        prod {
            dimension "version"
            buildConfigField("String", "BASE_URL", "\"http://www.mocky.io/v2/\"")
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "androidx.appcompat:appcompat:1.3.1"
    implementation "androidx.core:core-ktx:1.7.0"
    implementation "androidx.constraintlayout:constraintlayout:2.1.1"

    implementation 'com.github.FunkyMuse.KAHelpers:viewbinding:2.2.10'

    implementation 'com.jakewharton.timber:timber:5.0.1'

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_fragment"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_fragment"


    // Room components
    implementation "androidx.room:room-runtime:$room"
    kapt "androidx.room:room-compiler:$room"

    // Lifecycle components
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$life_cycle"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$life_cycle"

    // WorkManager
    implementation "androidx.work:work-runtime-ktx:$work_manager"

    //Koin
    implementation "io.insert-koin:koin-androidx-fragment:$koin"
    implementation "io.insert-koin:koin-androidx-scope:$koin"
    implementation "io.insert-koin:koin-androidx-viewmodel:$koin"

    // Retrofit dependencies
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava3:$retrofit"

    //OkHttp
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp"

    //Rx Java
    implementation "io.reactivex.rxjava3:rxjava:3.1.2"
    implementation "io.reactivex.rxjava3:rxandroid:$rx"
}
